{"version":3,"sources":["App.tsx","../../dist/index.es.js","index.tsx"],"names":["App","useState","undefined","cooldownTime","setCooldownTime","_a","cooledDown","setCooledDown","cooldownTimer","window","setTimeout","clearTimeout","useCooldown","className","pattern","inputMode","type","onChange","value","target","parseInt","disabled","onClick","ReactDOM","render","document","getElementById"],"mappings":"4QAuCeA,G,MAnCH,WAAO,IAAD,EACwBC,wBACtCC,GAFc,mBACTC,EADS,KACKC,EADL,OCFA,SAAqBD,QAChB,IAAjBA,IACFA,EAAe,KAGjB,IAAIE,EAAK,oBAAS,GACdC,EAAaD,EAAG,GAChBE,EAAgBF,EAAG,GAevB,OAbA,oBAAU,WACR,IAAIG,EAQJ,OANKF,IACHE,EAAgBC,OAAOC,WAAW,WAChC,OAAOH,GAAc,IACpBJ,IAGE,WACL,OAAOM,OAAOE,aAAaH,KAE5B,CAACF,IACG,CAACA,EAAYC,GDhBgBK,CAAYT,GAAgB,GAJhD,mBAITG,EAJS,KAIGC,EAJH,KAUhB,OACE,yBAAKM,UAAU,aACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,QAAf,uBAAuCP,IACvC,yBAAKO,UAAU,QACb,yBAAKA,UAAU,QAAf,iEAGA,2BACEA,UAAU,YACVC,QAAQ,SACRC,UAAU,UACVC,KAAK,SACLC,SAjBiB,SAAC,GAAD,IACfC,EADe,EACzBC,OAAUD,MADe,OAGzBd,EAAgBgB,SAASF,EAAO,MAexBA,MAAOf,GAAgB,MAG3B,4BAAQkB,UAAWf,EAAYgB,QAtBf,kBAAMf,GAAc,KAsBpC,sBEzBRgB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b4ac5be3.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { useCooldown } from 'use-cooldown';\nimport './App.css';\n\nconst App = () => {\n  const [cooldownTime, setCooldownTime] = useState<number | undefined>(\n    undefined\n  );\n  const [cooledDown, setCooledDown] = useCooldown(cooldownTime || 0);\n  const startCooldown = () => setCooledDown(false);\n  const changeCooldownTime = ({\n    target: { value }\n  }: React.ChangeEvent<HTMLInputElement>) =>\n    setCooldownTime(parseInt(value, 10));\n  return (\n    <div className=\"container\">\n      <div className=\"actionContainer\">\n        <div className=\"text\">{`Cooled Down: ${cooledDown}`}</div>\n        <div className=\"text\">\n          <div className=\"text\">\n            Set the length of time to disable the button in milliseconds.\n          </div>\n          <input\n            className=\"textInput\"\n            pattern=\"[0-9]*\"\n            inputMode=\"numeric\"\n            type=\"number\"\n            onChange={changeCooldownTime}\n            value={cooldownTime || ''}\n          />\n        </div>\n        <button disabled={!cooledDown} onClick={startCooldown}>\n          Begin Cooldown\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { useState, useEffect } from 'react';\n\nvar useCooldown = function useCooldown(cooldownTime) {\n  if (cooldownTime === void 0) {\n    cooldownTime = 500;\n  }\n\n  var _a = useState(true),\n      cooledDown = _a[0],\n      setCooledDown = _a[1];\n\n  useEffect(function () {\n    var cooldownTimer;\n\n    if (!cooledDown) {\n      cooldownTimer = window.setTimeout(function () {\n        return setCooledDown(true);\n      }, cooldownTime);\n    }\n\n    return function () {\n      return window.clearTimeout(cooldownTimer);\n    };\n  }, [cooledDown]);\n  return [cooledDown, setCooledDown];\n};\n\nexport { useCooldown };","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}